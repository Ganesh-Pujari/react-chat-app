{"version":3,"sources":["Shared/Popover/Popover.js","components/ChatMessages/ChatMessages.js","components/MessageBox/MessageBox.js","components/ChatRoom/ChatRoom.js","components/SignIn/SignIn.js","components/SignOut/SignOut.js","Firebase/config.js","App.js","reportWebVitals.js","index.js"],"names":["BasicPopover","props","useState","anchorEl","setAnchorEl","setSelectedOption","option","event","getSelectedOption","id","message","open","Boolean","undefined","className","color","variant","onClick","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","ChatMessage","showPopover","setPopover","auth","firebase","text","uid","photoURL","messageClass","currentUser","selectedOption","a","updateMessage","firestore","collection","doc","delete","src","MessageBox","console","log","messagesRef","updateText","messageId","formValue","setFormValue","sendMessage","e","preventDefault","user","createdAt","FieldValue","serverTimestamp","add","update","useEffect","onSubmit","value","onChange","target","placeholder","type","disabled","ChatRoom","messages","setMessage","setUpdateText","setMessageId","dummy","useRef","current","scrollIntoView","behavior","orderBy","onSnapshot","snapshot","docs","map","data","msg","ref","SignIn","provider","GoogleAuthProvider","signInWithPopup","SignOut","displayName","signOut","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","initializeApp","App","useAuthState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e17d4e0.chunk.js","sourcesContent":["// // import Overlay from '@restart/ui/esm/Overlay';\n// import { useEffect, useRef, useState } from 'react';\n// import { Popover, Overlay, } from 'react-bootstrap'\n// import { BiDotsVertical, BiEdit } from 'react-icons/bi';\n// import { AiOutlineDelete } from 'react-icons/ai';\n\n\n// function CustomPopover(props) {\n//   const [show, setShow] = useState(false);\n//   const [target, setTarget] = useState(null);\n//   const ref = useRef(null);\n\n//   const handleClick = (event) => {\n//     setShow(!show);\n//     setTarget(event.target);\n//   };\n\n//   const setSelectedOption = (option, event) => {\n//     handleClick(event);\n//     props.getSelectedOption(option, props.id, props.message);\n//   }\n\n//   return (\n//     <div ref={ref}>\n//       <button onClick={handleClick} className=\"option-icon\"><BiDotsVertical />\n//       </button>\n//       <Overlay\n//         show={show}\n//         target={target}\n//         placement=\"bottom\"\n//         container={ref}\n//         containerPadding={20}\n//       >\n//         <Popover id=\"popover-contained\">\n//           <Popover.Body>\n//             <h6 onClick={(event) => setSelectedOption('edit', event)}><BiEdit />Edit</h6>\n//             <h6 onClick={(event) => setSelectedOption('delete', event)}><AiOutlineDelete />Delete</h6>\n//           </Popover.Body>\n//         </Popover>\n//       </Overlay>\n//     </div>\n//   )\n// }\n\n\n\n// export default CustomPopover;\n\nimport Popover from '@mui/material/Popover';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport { useState } from 'react';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\n\nexport default function BasicPopover(props) {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const setSelectedOption = (option, event) => {\n    setAnchorEl(null);\n    props.getSelectedOption(option, props.id, props.message);\n  }\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n  return (\n    <div className=\"popover-body\">\n      {/* <Button aria-describedby={id} variant=\"contained\" onClick={handleClick}>\n        Open Popover\n      </Button> */}\n      <MoreVertIcon color=\"light\" aria-describedby={id} variant=\"contained\" onClick={handleClick} className=\"dot-icon\" />\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n      >\n        <div className=\"popover-text\">\n          <h6 onClick={(event) => setSelectedOption('edit', event)}><EditIcon />Edit</h6>\n          <h6 onClick={(event) => setSelectedOption('delete', event)}><DeleteIcon />Delete</h6>\n        </div>\n      </Popover>\n    </div>\n  );\n}","import './ChatMessages.css';\nimport Popover from '../../Shared/Popover/Popover';\nimport { useEffect, useState } from 'react';\n\n\nfunction ChatMessage(props) {\n  const [showPopover, setPopover] = useState(false);\n  const auth = props.firebase.auth();\n  const { text, uid, photoURL, id } = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n  const getSelectedOption = async (selectedOption, id, message) => {\n    if (selectedOption === 'edit' && message) {\n      props.updateMessage({ id, message });\n    } else {\n      await props.firestore.collection('messages').doc(id).delete();\n    }\n    setPopover(false);\n  }\n\n\n\n\n  return (<>\n    <div className={`message ${messageClass}`}>\n      <img src={photoURL} />\n      {showPopover && uid === auth.currentUser.uid ? <Popover getSelectedOption={getSelectedOption} id={id} message={text} /> : null}\n      <p onClick={() => setPopover(!showPopover)}>{text} </p>\n\n    </div>\n  </>)\n}\n\nexport default ChatMessage;","import { useEffect, useRef, useState } from 'react';\nimport { IoMdSend } from 'react-icons/io';\nimport './MessageBox.css';\nimport Users from '../../Shared/UserList/Users'\n\nfunction MessageBox(props) {\n  console.log('TCL ->  ~ file: MessageBox.js ~ line 6 ~ MessageBox ~ props', props);\n  const messagesRef = props.firestore.collection('messages');\n  console.log('TCL ->  ~ file: MessageBox.js ~ line 8 ~ MessageBox ~ messagesRef', messagesRef);\n\n  const firebase = props.firebase;\n  let updateText = props.text;\n  const messageId = props.messageId;\n  // const [text, setUpdateText] = useState('');\n\n  const [formValue, setFormValue] = useState('');\n\n  const sendMessage = async (e) => {\n    setFormValue('');\n    e.preventDefault();\n    const { uid, photoURL, } = firebase.auth().currentUser;\n    const user = {\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    }\n\n    if (!updateText) {\n      await messagesRef.add(user);\n    } else {\n      await props.firestore.collection('messages').doc(messageId).update(user);\n      props.updateMessage({ id: null, message: null });\n    }\n\n  }\n\n  useEffect(() => {\n    if (updateText) {\n      setFormValue(updateText);\n    }\n  }, [updateText]);\n\n  return (<>\n\n    <form onSubmit={sendMessage}>\n      {/* {formValue.includes('@') ? <Users /> : null} */}\n\n      <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"Type message...\" />\n\n      <button type=\"submit\" disabled={!formValue}> <IoMdSend />Send</button>\n\n    </form>\n  </>)\n}\n\nexport default MessageBox;","\nimport { useEffect, useRef, useState } from 'react';\nimport ChatMessage from '../ChatMessages/ChatMessages';\nimport MessageBox from '../MessageBox/MessageBox';\nimport './ChatRoom.css';\n\n\nfunction ChatRoom(props) {\n  const [messages, setMessage] = useState([]);\n  const firestore = props.firestore;\n  const firebase = props.firebase;\n  const [updateText, setUpdateText] = useState('');\n  const [messageId, setMessageId] = useState('');\n  const dummy = useRef();\n\n\n  // let updateText;\n\n  //    await firestore.collection('messages').onSnapshot((snapshot)=>{\n  //    console.log('TCL ->  ~ file: ChatRoom.js ~ line 17 ~ awaitfirestore.collection ~ snapshot',snapshot.docs.map(doc=>doc.data()));\n  // // messages = snapshot.docs;\n  //    setMessage(snapshot.docs.map(doc=>doc.data()))\n  //   });\n  //   console.log('TCL ->  ~ file: ChatRoom.js ~ line 16 ~ ChatRoom ~ messages', messages);\n  // const query = messagesRef.orderBy('createdAt').limitToLast(25);\n\n  // const [messages] = useCollectionData(query, { idField: 'id' });\n\n  const updateMessage = ({ id, message }) => {\n  // console.log('TCL ->  ~ file: ChatRoom.js ~ line 30 ~ updateMessage ~ message', message);\n  // console.log('TCL ->  ~ file: ChatRoom.js ~ line 30 ~ updateMessage ~ id', id);\n    // if (message) {\n      setMessageId(id);\n      setUpdateText(message);\n    // }\n  }\n\n  useEffect(() => {\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  useEffect(() => {\n    firestore.collection('messages').orderBy('createdAt', 'asc').onSnapshot((snapshot) => {\n      setMessage(snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() })))\n    });\n  }, []);\n\n\n  return (<>\n    <main>\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} firebase={firebase} firestore={firestore} updateMessage={updateMessage} />)}\n      <span ref={dummy}></span>\n    </main>\n\n    <MessageBox firebase={firebase} firestore={firestore} text={updateText} messageId={messageId} updateMessage={updateMessage} />\n  </>)\n\n}\n\n\nexport default ChatRoom;\n","import { FcGoogle } from 'react-icons/fc';\nimport { FaFacebook } from 'react-icons/fa';\nimport './SignIn.css';\n\n\nfunction SignIn(props) {\n  let firebase = props.firebase;\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(provider);\n  };\n\n  // const signInWithFacebook = () => {\n  //   const provider = new firebase.auth.signInWithFacebook();\n  //   firebase.auth().signInWithPopup(provider);\n  // }\n\n  return (\n    <div>\n      <button onClick={signInWithGoogle}><FcGoogle /> Sign in with Google account</button>\n      {/* <button onClick={signInWithFacebook}><FaFacebook /> Sign in with Facebook account</button> */}\n\n    </div>\n  );\n}\n\nexport default SignIn;","import { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { BiLogOut } from 'react-icons/bi';\n\nfunction SignOut(props) {\n  const auth = props.firebase.auth();\n  console.log('TCL ->  ~ file: SignOut.js ~ line 6 ~ SignOut ~ auth', auth);\n  const firestore = props.firestore;\n  const messagesRef = props.firestore.collection('messages');\n  console.log('TCL ->  ~ file: SignOut.js ~ line 8 ~ SignOut ~ messagesRef', messagesRef);\n  // const { uid } = auth?.currentUser;\n\n  // const query = firestore.collection('messages').where('uid', '===', uid);\n  // console.log('TCL ->  ~ file: SignOut.js ~ line 10 ~ SignOut ~ query', query);\n\n  // const [messages] = useCollectionData(query, { idField: 'uid' });\n\n  // console.log('TCL ->  ~ file: SignOut.js ~ line 5 ~ SignOut ~ auth', messages);\n\n  return auth.currentUser && (<div className=\"sign-out\">\n    <img src={auth.currentUser.photoURL} />\n    <h6>{auth.currentUser.displayName}</h6>\n    <button className=\"sign-out-btn\" onClick={() => auth.signOut()}> <BiLogOut /> Sign Out</button>\n    </div>)\n\n}\n\nexport default SignOut;","// firebase config object\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD-jy4Ov4hs12SZZT17oKf13HHEQKAQWq8\",\n  authDomain: \"react-chat-app-5bf77.firebaseapp.com\",\n  projectId: \"react-chat-app-5bf77\",\n  storageBucket: \"react-chat-app-5bf77.appspot.com\",\n  messagingSenderId: \"9887463294\",\n  appId: \"1:9887463294:web:60a44a29840262aec3e52f\"\n};\n\nexport default firebaseConfig;","import './App.css';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/auth';\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\nimport ChatRoom from './components/ChatRoom/ChatRoom';\nimport SignIn from './components/SignIn/SignIn';\nimport SignOut from './components/SignOut/SignOut';\nimport firebaseConfig from './Firebase/config'\nimport Button from '@mui/material/Button';\n// import { ThemeProvider } from \"styled-components\";\n// import { GlobalStyles } from \"./Shared/Themes/GlobalStyle\";\n// import { lightTheme, darkTheme } from \"./Shared/Themes/Themes\"\nimport { useState } from 'react';\n\nfirebase.initializeApp(firebaseConfig);\n\n\n\nfunction App() {\n  const auth = firebase.auth();\n  const firestore = firebase.firestore();\n  const [user] = useAuthState(auth);\n\n  const [theme, setTheme] = useState('light');\n  const themeToggler = () => {\n    theme === 'light' ? setTheme('dark') : setTheme('light')\n  }\n\n  return (\n    // <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n      <>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <SignOut firebase={firebase} firestore={firestore} />\n          </header>\n\n          <section>\n        {/* <GlobalStyles />/S */}\n\n            {user ? <ChatRoom firestore={firestore} firebase={firebase} /> : <SignIn firebase={firebase} />}\n\n          </section>\n\n        </div>\n      </>\n    // </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}